#+TITLE: UNIX 网络编程实验指南
#+日期：<2021-03-23 星期二>
#+作者：<你的名字>和<你的ID>

* 评论

1. 你应该提交这个文件的 HTML 文件，使用 C-c C-e h h。
2. HTML 文件名格式为：UNP2020-189074123.html

* 经验。第一个：一次性外壳“系统”

**自述文件
   请执行一个名为 system.shell 的命令。
   执行时，它需要另一个命令作为
   它的参数，这个命令可以由一个或多个组成
   论据。例如，“系统”可以按如下方式执行：

#+BEGIN_SRC sh
  usr@~/>./system cat text.txt

#+END_SRC

   您执行的命令“system”应该像一次性
   shell 执行其参数“cat text.txt”。具体来说，应该
   首先 fork 一个子进程，在它和它本身之间有
   管道。子进程将其标准输出（及其标准错误）复制到
   管道的写端，通过它可以将输出传输到父级，
   然后调用“exec”系列中的一些函数来执行命令“cat”
   例如，使用参数“text.txt”。在管道的另一边，
   父级应该从管道的读取端读取以接收输出
   的孩子，并将它们打印在显示器上。终止后
   孩子，父母应该收获它，然后退出。
   
** 编码
#+BEGIN_SRC C
/ *您的代码在这里* /
#+END_SRC


* 经验。第二：TCP 并发 Echo 服务

** 自述文件
  在这个实验中，您应该实现一对客户端服务器程序。服务器程序
  提供带有并发子进程的 Echo 服务。对于每个客户端请求，父
  负责监听的服务器会fork一个子进程来处理请求。
  服务完成后子进程退出，由父进程收割
  通过信号处理（使用系统 API sigaction ）。

  客户端通过以下命令发起请求：

#+BEGIN_SRC sh
unix> ./echoclient <服务器的IP> < file.txt
第 1 行 # 服务器回显的数据
2号线
3号线
...
Unix>
#+END_SRC

** 编码
  
#+BEGIN_SRC C
/* 客户端代码在这里 */
#+END_SRC

#+BEGIN_SRC C
/* 服务器代码在这里 */
#+END_SRC

* 经验。第三名：IO多路复用
  
** 自述文件
  使用系统API“epoll”实现服务端程序
  第二个实验。

** 编码
#+BEGIN_SRC c
  /* 服务器代码在这里 */
#+END_SRC

* 经验。第 4 种：使用互斥锁预分配线程

** 自述文件
  在这个实验中，你将实现一个基于 TCP 的回声服务器
  预分配线程。线程使用 POSIX 线程互斥量相互独占调用
  “接受”以建立连接。

  您可以在 Exp 中使用客户端。 2nd 测试您的代码。
** 编码

#+BEGIN_SRC C

＃+ END_SRC

* 经验。第五：预分配的进程服务器

** 自述文件

  在这个实验中，你的工作是实现一个预先分配的进程服务器。
  在侦听套接字上调用 API 接受之前，套接字描述符
  应设置为可重复使用的，以便多人同时收听
  进程（使用套接字选项 SO_REUSEPORT）。你不必担心
  关于“雷霆万钧”。

  您可以在 Exp 中使用客户端。 2nd 测试您的代码。

** 编码
#+BEGIN_SRC C

#+END_SRC