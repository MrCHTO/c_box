＃+ TITLE：UNIX网络编程实验指南
＃+ DATE：<2021-03-23 Tue>
＃+作者：<您的姓名>和<您的ID>

* 评论

1.您应该使用C-c C-e h h提交此文件的HTML文件。
2. HTML文件名的格式应为：UNP2020-189074123.html

*经验值1st：一次性shell“系统”

**自述文件
   请实现一个名为system的shell命令。
   执行时，它需要另一个命令作为
   它的参数，并且此命令可以由一个或多个组成
   论点。例如，“系统”可以如下执行：

＃+ BEGIN_SRC sh
  usr @〜/>。/system cat text.txt

＃+ END_SRC

   您执行的命令“系统”应该像一次性
   shell执行其参数“ cat text.txt”。具体来说，它应该
   最初是一个子进程，在此子进程与它自身之间已经存在
   管道。子进程将其stdout（及其stderr）复制到
   管道的写端，通过它可以将输出传输到父级，
   然后调用“ exec”系列中的某些函数来执行命令“ cat”
   例如，带有参数“ text.txt”。在管道的另一侧，
   父级应该从管道的读取端读取以接收输出
   的孩子，然后将它们打印在显示器上。终止后
   孩子，父母应该收割它，然后退出。
   
** 编码
＃+ BEGIN_SRC C
/ *您的代码在这里* /
＃+ END_SRC


*经验值第二：TCP的并发回显服务

**自述文件
  在这个实验中，您应该实现一对客户端服务器程序。服务器程序
  为Echo服务提供并发子进程。对于每个客户请求，父级
  负责侦听的服务器将派生一个子进程来处理请求。
  子进程在服务完成后退出，它将由父进程获得
  通过信号处理（使用系统API sigaction）。

  客户端通过以下命令启动请求：

＃+ BEGIN_SRC sh
unix> ./echoclient <服务器的IP> <file.txt
第1行＃服务器回显的数据
2号线
3号线
...
Unix>
＃+ END_SRC

** 编码
  
＃+ BEGIN_SRC C
/ *此处的客户代码* /
＃+ END_SRC

＃+ BEGIN_SRC C
/ *服务器代码在这里* /
＃+ END_SRC

*经验值第三名：IO多路复用
  
**自述文件
  使用系统API“ epoll”在
  第二个实验。

** 编码
＃+ BEGIN_SRC c
  / *服务器代码在这里* /
＃+ END_SRC

*经验值第四：使用互斥量预分配线程

**自述文件
  在本实验中，您将使用以下方法实现基于TCP的回显服务器：
  预分配的线程。线程使用POSIX线程互斥锁进行多次独占调用
  建立连接的“接受”。

  您可以在Exp中使用客户端。第二个测试您的代码。
** 编码

＃+ BEGIN_SRC C

＃+ END_SRC

*经验值第五名：预分配的流程服务器

**自述文件

  在此实验中，您的工作是实施预分配的流程服务器。
  在侦听套接字上调用API接受之前，套接字描述符
  应该设置为可重复使用的资源，以便多个用户可以同时收听
  进程（使用套接字选项SO_ REUSEPORT）。你不必担心
  关于“雷群”。

  您可以在Exp中使用客户端。第二个测试您的代码。

** 编码
＃+ BEGIN_SRC C

＃+ END_SRC 
#+ TITLE:UNIX wǎngluò biānchéng shíyàn zhǐnán